using System;
using System.ComponentModel;

namespace SAMaster.Entities
{
	/// <summary>
	///		The data structure representation of the 'mst_nodes_ac' table via interface.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	public interface IMstNodesAc 
	{
		/// <summary>			
		/// MAPINFO_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "mst_nodes_ac"</remarks>
		System.Int32 MapinfoId { get; set; }
				
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		System.Int32 OriginalMapinfoId { get; set; }
			
		
		
		/// <summary>
		/// Node : 
		/// </summary>
		System.String  Node  { get; set; }
		
		/// <summary>
		/// XCoord : 
		/// </summary>
		System.Double?  Xcoord  { get; set; }
		
		/// <summary>
		/// YCoord : 
		/// </summary>
		System.Double?  Ycoord  { get; set; }
		
		/// <summary>
		/// NodeType : 
		/// </summary>
		System.String  NodeType  { get; set; }
		
		/// <summary>
		/// GrndElev : 
		/// </summary>
		System.Double?  GrndElev  { get; set; }
		
		/// <summary>
		/// HasSpecNode : 
		/// </summary>
		System.String  HasSpecNode  { get; set; }
		
		/// <summary>
		/// HasSpecLink : 
		/// </summary>
		System.String  HasSpecLink  { get; set; }
		
		/// <summary>
		/// GageID : 
		/// </summary>
		System.String  GageId  { get; set; }
		
		/// <summary>
		/// DME_GlobalID : 
		/// </summary>
		System.Int32?  DmeGlobalId  { get; set; }
			
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		System.Object Clone();
		
		#region Data Properties


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _mstLinksAcUsNodeGetByDsNode
		/// </summary>	
		TList<MstLinksAc> MstLinksAcCollectionGetByDsNode {  get;  set;}	


		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _mstLinksAcUsNodeGetByUsNode
		/// </summary>	
		TList<MstLinksAc> MstLinksAcCollectionGetByUsNode {  get;  set;}	

		#endregion Data Properties

	}
}


